version: '3.6'
services:
    app:
        image: project-image
        container_name: project-container
        build:
            context: .
        ports:
            - "8081:8080"
        environment:
            DB_URL: jdbc:postgresql://postgres:5432/bestProject
            RABBIT_HOST: rabbitmq
            PORT: 8080
        deploy:
            restart_policy:
                delay: 5s
                condition: on-failure
                max_attempts: 5

        networks:
            - backend

    postgres:
        image: 'postgres:15.2-alpine'
        container_name: postgres
        ports:
            - "5433:5432"

        environment:
            - POSTGRES_USER=username
            - POSTGRES_PASSWORD=password
            - POSTGRES_DB=farmProject
        restart: always
        networks:
            - backend
        volumes:
            - ./volume/postgres_data:/var/lib/postgresql/data/

    rabbitmq:
        image: rabbitmq:3-management
        hostname: rabbitmq
        restart: always
        environment:
            RABBITMQ_DEFAULT_USER: username
            RABBITMQ_DEFAULT_PASS: password
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - ./volume/rabbitmq_data:/var/lib/rabbitmq

    nginx:
        container_name: DOMAIN_NAME-nginx
        hostname: DOMAIN_NAME-nginx
        build: ./volumes/build/nginx
        volumes:
            - ./var/log/nginx:/var/log/nginx #log файлы.
            - ./volumes/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro #Конфигурация nginx.
            - ./volumes/etc/nginx/sites-enabled:/etc/nginx/sites-enabled:ro #Конфигурация площадок.
            - ./volumes/etc/nginx/ssl:/etc/nginx/ssl:ro #сертификаты
            - /var/www/DOMAIN_NAME:/var/www/DOMAIN_NAME #Домашняя директория
        ports:
            - "80:80"
            - "443:443"
        links:
            - php-fpm
        restart:
            always
        networks:
            - backend
networks:
    backend: {}